#pragma checksum "C:\Users\kathr\OneDrive\Área de Trabalho\Curso C#\ProjetoElevador_Documentacao\ProjetoElevador_Documentacao\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "be43b16cb235841040b86489a34d2b74d53fce90"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\kathr\OneDrive\Área de Trabalho\Curso C#\ProjetoElevador_Documentacao\ProjetoElevador_Documentacao\Views\_ViewImports.cshtml"
using ProjetoElevador_Documentacao;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\kathr\OneDrive\Área de Trabalho\Curso C#\ProjetoElevador_Documentacao\ProjetoElevador_Documentacao\Views\_ViewImports.cshtml"
using ProjetoElevador_Documentacao.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"be43b16cb235841040b86489a34d2b74d53fce90", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4923143fe3bec400c1f93c72fde12f2bac68e920", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\kathr\OneDrive\Área de Trabalho\Curso C#\ProjetoElevador_Documentacao\ProjetoElevador_Documentacao\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Documentação do Projeto Elevador";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""text-center"">
    <h1 class=""display-4"">Bem vindo ao Projeto Elevador!<br><br></h1>
</div>

<div class=""text-justify"">
    <h1 class=""display-10""> Este documento serve para instruir o usuário na utilização do aplicativo console ""Projeto Elevador"". 

        A função deste projeto é o de gerenciar um elevador para transporte de pessoas em um prédio. <br><br>

        Ao iniciar a aplicação, o usuário deve informar a quantidade de andares do prédio e a capacidade máxima do elevador conforme informado no console. <br><br>

        Após a inserção destes dados, o usuário já será capaz de realizar o controle do elevador. 
        O menu com opções de controle do elevador é apresentado conforme a figura 1. 
        Lembrando que o elevador sempre inicia-se vazio no andar 0 (térreo). 
        </h1>

        <br><br><p>Figura 1: Ilustração do menu inicial. </p>
        <img src=""imagens/menuInicial.png"" />
        <p>Fonte: autor, 2021. </p>

        <h1 class=""display-10""> Conforme ");
            WriteLiteral(@"ilustrado na figura 1, o aplicativo oferece quatro opções para o controle do elevador. São elas:<br><br>

        1) Adicionar uma pessoa no elevador. A figura 2 apresenta uma ilustração do console ao adicionar uma pessoa no elevador. </h1>

        <br><br><p>Figura 2: Ilustração do console ao adicionar uma pessoa no elevador. </p>
        <img src=""imagens/adicionou.png""/>
        <p>Fonte: autor, 2021.</p>

        <h1 class=""display-10""> A aplicação mostrará a quantidade atual de pessoas no elevador e em qual andar do prédio o mesmo está. 
            Note que se o elevador já estiver com a capacidade máxima atingida, então não será mais possível adicionar ocupantes.<br><br>

        2) Retirar uma pessoa no elevador. A figura 3 apresenta uma ilustração do console ao retirar uma pessoa no elevador. </h1>

        <br><br><p>Figura 3: Ilustração do console ao retirar uma pessoa no elevador. </p>
        <img src=""imagens/retirou.png""/>
        <p>Fonte: autor, 2021.</p>

        <h1 class=");
            WriteLiteral(@"""display-10""> Note que se o elevador já estiver vazio, então não será mais possível retirar ocupantes.<br><br>

        3) Fazer o elevador subir um andar no prédio. A figura 4 apresenta uma ilustração do console ao elevador subir um andar. </h1>

        <br><br><p>Figura 4: Ilustração do console ao elevador subir um andar no prédio. </p>
        <img src=""imagens/elevadorSubiu.png""/>
        <p>Fonte: autor, 2021.</p>

        <h1 class=""display-10""> Note que se o elevador já estiver no último andar, então não será mais possível subir.<br><br>

        4) Fazer o elevador descer um andar no prédio. A figura 5 apresenta uma ilustração do console ao elevador descer um andar. </h1>

        <br><br><p>Figura 5: Ilustração do console ao elevador descer um andar no prédio. </p>
        <img src=""imagens/elevadorDesceu.png""/>
        <p>Fonte: autor, 2021.</p>

        <h1 class=""display-10""> Note que se o elevador já estiver no térreo, então não será mais possível descer, ou seja, não há andares ");
            WriteLiteral(@"subterrâneos no prédio.<br><br>

        Para acessar cada uma dessas opções de controle, o usuário deve digitar o valor correspondente a cada uma das funções (valores de 1 a 4). 
        Quando o usuário desejar sair da aplicação, apenas precisa informar o valor 5 no menu. A figura 6 apresenta uma ilustração do console ao usuário decidir sair da aplicação. </h1>
    
        <br><br><p>Figura 6: Ilustração do console ao usuário decidir sair da aplicação. </p>
        <img src=""imagens/sair.png""/>
        <p>Fonte: autor, 2021.</p>

        <h1 class=""display-30"">Obrigado por utilizar o Projeto Elevador! ;)<br><br> </h1>

    <p>Learn about <a href=""https://docs.microsoft.com/aspnet/core"">building Web apps with ASP.NET Core</a>.</p>
</div>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
